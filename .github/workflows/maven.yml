# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: TestProject tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Create env file
      run: |
        touch .env
        echo TP_API_KEY=${{ secrets.TP_API_KEY }} >> .env  
    - name: Run TestProject Agent
      env:
        TP_API_KEY: ${{ secrets.TP_API_KEY }} 
      run: |
        cat docker-compose.yml
        docker-compose -f docker-compose.yml up -d
    - name: Wait for Agent to Register
      run: |
          trap 'kill $(jobs -p)' EXIT
          attempt_counter=0
          max_attempts=45
          mkdir -p build/reports/agent
          docker-compose -f docker-compose.yml logs -f | tee build/reports/agent/log.txt&
          until curl -s http://localhost:8585/api/status | jq '.registered' | grep true; do
            if [ ${attempt_counter} -eq ${max_attempts} ]; then
              echo "Agent failed to register. Terminating..."
              exit 1
            fi
            attempt_counter=$(($attempt_counter+1))
            sleep 1
          done
